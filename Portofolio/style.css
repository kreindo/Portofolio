/* {
    /*font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;

}*/

* {
  margin: 0;
  padding: 0;
}

body {
  background-color: rgb(0, 0, 0);
  /* margin-top: 60px;
  margin-bottom: 80px;
  margin-right: 150px;
  margin-left: 150px; 
  text-align: center;*/
}

.hugeBoii {
  margin: 0 0 0 0;
}

.wrapper  {
    width: 100%;
    font-family: 'Inconsolata', monospace;
    font-weight: 750;
    color: rgb(223, 223, 223);
    
}



.alien {
  margin: 80% auto;
  font-family: 'Inconsolata', monospace;
  font-weight: 750;
  /* margin: 25em 0 0 0; */
  color: rgb(223, 223, 223);
  /* display: flex; */
  /* justify-content: center; */
  /* position: absolute; */
  /* align-items: center; */
  width: fit-content;
  height: min-content;
  /* white-space: nowrap; */
  /* overflow: auto; */
  top: 50%;
  left: 50%;
}


.polymorph h1 {
  /*position:fixed;*/
  padding: 30px 30px 100px;
  margin: auto;
  text-align: center;
  font-size: 55px;
  white-space: nowrap;
  overflow: hidden;
  color: rgb(223, 223, 223);
  user-select: none;
  line-height: 44px;

}

.polymorph h2 {
  padding: 30px 0 30px;
  margin: -20px 0 0 0;
  text-align: center;
  white-space: nowrap;
  user-select: none;
  
}

.polymorph h3 {
  padding: 30px 30px;
  margin: 0 auto;
  text-align: center;
  white-space: nowrap;
  user-select: none;

}

.polymorph h4 {
  color: darkred;
  text-align: center;
  padding: 20px 0 20px 0;
  margin: 0 auto;
  white-space: nowrap;
  user-select: none;

}

.polymorph p {
  /*position:fixed;*/
  padding: 5px 0 0 0 ;
  margin: 0 25px 20px 25px;
  text-align: justify;
  font-size: 16px;
  overflow: hidden;
  color: rgb(223, 223, 223);
  /*line-height: 12px;*/

}


.d1{
    /*
    background-color: red;
    float: left;
    padding-bottom: 2em;
    padding-left: 10px;
    padding-right: 10px; 
    */
    text-decoration: underline;
    text-decoration-color: darkred;
    color: rgb(223, 223, 223);
    
}
    
.sepDeco {
  border: 1px solid darkred;
}

/* 
.helloGreet {
    text-align: center;
    color: rgb(17, 56, 56);
    font-size: large;
}
 */
p {
    text-align: justify;
    /* color: white; */
}

.pog {
    margin: 20px 0 30px 0;
    border: 3px solid darkred;
    border-radius: 20px;
    
}



hr {
    margin-top: 30px;
    border: 3px groove darkred;
     
}
/*---------------------------------------Glitch efx trial-----------------------------------------------*/
/* Here's the meat and potatoes.

/* Our mixin positions a copy of our text
directly on our existing text, while
also setting content to the appropriate
text set in the data-text attribute. */
.glitch {
    position: relative;
    font-size: 1em;
    letter-spacing: normal;
    color: rgb(255, 0, 0);
    font-weight: bold;
    background-color: rgb(68, 0, 0);
    white-space: nowrap;
    overflow: hidden;
    
    /* Animation provies a slight random skew. Check bottom of doc
    for more information on how to random skew. */
    animation: glitch-skew 1s infinite linear alternate-reverse;
    /* Creates a copy before our text. */
    /* Creates a copy after our text. Note comments from ::before.*/
  }
  .glitch::before {
    /* Duplicates our text with the mixin.*/
    content: "THE_SYNDICLOWN";/*attr(data-text);*/
    letter-spacing: 2px;
    position: absolute;
    top: 0;
    left: -1px;
    width: 100%;
    height: 100%;
    color: rgb(255, 0, 0);
    
    white-space: nowrap;
    /*overflow: hidden; */
    
    /* Scoots text slightly to the left for the color offset.*/
    left: 2px;
    /* Creates the color 'shadow' that happens on the glitch.*/
    text-shadow: -4px 0 #000000;
    /* Creates an initial clip for our glitch. This works in
    a typical top,right,bottom,left fashion and creates a mask
    to only show a certain part of the glitch at a time. */
    clip: rect(44px, 450px, 70px, 0);
    /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
    with an alternating animation to keep things fresh. */
    animation: glitch-anim 1s infinite linear alternate-reverse;
  }
  .glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    left: -2px;
    white-space: nowrap;
    overflow: hidden;
    text-shadow: -2px 0 #ff0000, 2px 2px #ff0000;
    animation: glitch-anim2 2s infinite linear alternate-reverse;
  }
  
  /* Creates an animation with 20 steaps. For each step, it calculates 
  a percentage for the specific step. It then generates a random clip
  box to be used for the random glitch effect. Also adds a very subtle
  skew to change the 'thickness' of the glitch.*/
  @keyframes glitch-anim {
    0% {
      clip: rect(36px, 9999px, 28px, 0);
      transform: skew(2.9deg);
    }
    5% {
      clip: rect(78px, 9999px, 15px, 0);
      transform: skew(0.4deg);
    }
    10% {
      clip: rect(80px, 9999px, 86px, 0);
      transform: skew(-0.52deg);
    }
    15% {
      clip: rect(17px, 9999px, 5px, 0);
      transform: skew(0.55deg);
    }
    20% {
      clip: rect(39px, 9999px, 86px, 0);
      transform: skew(1.74deg);
    }
    25% {
      clip: rect(59px, 9999px, 30px, 0);
      transform: skew(0.69deg);
    }
    30% {
      clip: rect(45px, 9999px, 78px, 0);
      transform: skew(0.71deg);
    }
    35% {
      clip: rect(71px, 9999px, 61px, 0);
      transform: skew(0.54deg);
    }
    40% {
      clip: rect(10px, 9999px, 93px, 0);
      transform: skew(0.66deg);
    }
    45% {
      clip: rect(94px, 9999px, 35px, 0);
      transform: skew(0.97deg);
    }
    50% {
      clip: rect(81px, 9999px, 92px, 0);
      transform: skew(-0.24deg);
    }
    55% {
      clip: rect(8px, 9999px, 55px, 0);
      transform: skew(0.48deg);
    }
    60% {
      clip: rect(10px, 9999px, 52px, 0);
      transform: skew(0.8deg);
    }
    65% {
      clip: rect(36px, 9999px, 71px, 0);
      transform: skew(0.91deg);
    }
    70% {
      clip: rect(91px, 9999px, 39px, 0);
      transform: skew(0.82deg);
    }
    75% {
      clip: rect(22px, 9999px, 22px, 0);
      transform: skew(0.59deg);
    }
    80% {
      clip: rect(60px, 9999px, 100px, 0);
      transform: skew(0.22deg);
    }
    85% {
      clip: rect(37px, 9999px, 78px, 0);
      transform: skew(3.01deg);
    }
    90% {
      clip: rect(76px, 9999px, 19px, 0);
      transform: skew(-2.48deg);
    }
    95% {
      clip: rect(46px, 9999px, 11px, 0);
      transform: skew(0.92deg);
    }
    100% {
      clip: rect(29px, 9999px, 42px, 0);
      transform: skew(0.64deg);
    }
  }
  /* Same deal, just duplicated for ultra randomness.*/
  @keyframes glitch-anim2 {
    0% {
      clip: rect(55px, 9999px, 4px, 0);
      transform: skew(0.19deg);
    }
    5% {
      clip: rect(3px, 9999px, 56px, 0);
      transform: skew(0.01deg);
    }
    10% {
      clip: rect(21px, 9999px, 93px, 0);
      transform: skew(0.77deg);
    }
    15% {
      clip: rect(36px, 9999px, 40px, 0);
      transform: skew(0.73deg);
      content: "syndicate";
      font-size: 25px;
      position: absolute;
    }
    20% {
      clip: rect(88px, 9999px, 66px, 0);
      transform: skew(0.49deg);
    }
    25% {
      clip: rect(20px, 9999px, 89px, 0);
      transform: skew(0.11deg);
    }
    30% {
      clip: rect(37px, 9999px, 68px, 0);
      transform: skew(0.6deg);
    }
    35% {
      clip: rect(73px, 9999px, 66px, 0);
      transform: skew(0.14deg);
    }
    40% {
      clip: rect(86px, 9999px, 53px, 0);
      transform: skew(0.95deg);
    }
    45% {
      clip: rect(1px, 9999px, 92px, 0);
      transform: skew(0.81deg);
    }
    50% {
      clip: rect(22px, 9999px, 96px, 0);
      transform: skew(0.28deg);
    }
    55% {
      clip: rect(61px, 9999px, 62px, 0);
      transform: skew(0.92deg);
    }
    60% {
      clip: rect(62px, 9999px, 37px, 0);
      transform: skew(0.69deg);
    }
    65% {
      clip: rect(51px, 9999px, 33px, 0);
      transform: skew(0.69deg);
    }
    70% {
      clip: rect(61px, 9999px, 92px, 0);
      transform: skew(0.25deg);
    }
    75% {
      clip: rect(23px, 9999px, 75px, 0);
      transform: skew(0.86deg);
    }
    80% {
      clip: rect(44px, 9999px, 40px, 0);
      transform: skew(0.69deg);
    }
    85% {
      clip: rect(67px, 9999px, 7px, 0);
      transform: skew(0.36deg);
    }
    90% {
      clip: rect(30px, 9999px, 6px, 0);
      transform: skew(0.69deg);
    }
    95% {
      clip: rect(88px, 9999px, 96px, 0);
      transform: skew(0.55deg);
    }
    100% {
      clip: rect(32px, 9999px, 37px, 0);
      transform: skew(0.44deg);
    }
  }
  /* Does the same deal as before, but now only skews. Used for main text.*/
  @keyframes glitch-skew {
    0% {
      transform: skew(1deg);
    }
    10% {
      transform: skew(2deg);
    }
    20% {
      transform: skew(5deg);
    }
    30% {
      transform: skew(-4deg);
    }
    40% {
      transform: skew(-1deg);
    }
    50% {
      transform: skew(-4deg);
    }
    60% {
      transform: skew(-8deg);
    }
    70% {
      transform: skew(5deg);
    }
    80% {
      transform: skew(3deg);
    }
    90% {
      transform: skew(0deg);
    }
    100% {
      transform: skew(2deg);
    }
  }
/*---------------------------------------Glitch efx trial-----------------------------------------------*/



/*---------------------------------------Glitch efx trial-----------------------------------------------*/
/* Here's the meat and potatoes.

/* Our mixin positions a copy of our text
directly on our existing text, while
also setting content to the appropriate
text set in the data-text attribute. */
.glitch2 {
    position: relative;
    font-size: 2em;
    letter-spacing: normal;
    color: rgb(255, 255, 255);
    font-weight: bold;
    user-select: none;
    white-space: nowrap;
    overflow: hidden;

    
    /* Animation provies a slight random skew. Check bottom of doc
    for more information on how to random skew. */
    animation: dot-glitch-skew 1s infinite linear alternate-reverse;
    /* Creates a copy before our text. */
    /* Creates a copy after our text. Note comments from ::before.*/
  }
  .glitch2::before {
    /* Duplicates our text with the mixin.*/
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #f80000;
    padding: 80px;
    margin: 20px;
    color: rgb(46, 0, 0);
    /* Scoots text slightly to the left for the color offset.*/
    left: 10px;
    /* Creates the color 'shadow' that happens on the glitch.*/
    text-shadow: -9px 0 #f80000;
    /* Creates an initial clip for our glitch. This works in
    a typical top,right,bottom,left fashion and creates a mask
    to only show a certain part of the glitch at a time. */
    clip: rect(44px, 450px, 56px, 0);
    /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
    with an alternating animation to keep things fresh. */
    animation: dot-glitch-anim 3s infinite linear alternate-reverse;
  }
  .glitch2::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    left: -9px;
    text-shadow: -5px 0 #ff0000, 2px 2px #570404;
    animation: dot-glitch-anim2 1s infinite linear alternate-reverse;
  }
  
  /* Creates an animation with 20 steaps. For each step, it calculates 
  a percentage for the specific step. It then generates a random clip
  box to be used for the random glitch effect. Also adds a very subtle
  skew to change the 'thickness' of the glitch.*/
  @keyframes dot-glitch-anim {
    0% {
      clip: rect(36px, 9999px, 28px, 0);
      transform: skew(2.9deg);
    }
    5% {
      clip: rect(78px, 9999px, 15px, 0);
      transform: skew(0.4deg);
    }
    10% {
      clip: rect(80px, 9999px, 86px, 0);
      transform: skew(-0.52deg);
    }
    15% {
      clip: rect(17px, 9999px, 5px, 0);
      transform: skew(0.55deg);
    }
    20% {
      clip: rect(39px, 9999px, 86px, 0);
      transform: skew(1.74deg);
    }
    25% {
      clip: rect(59px, 9999px, 30px, 0);
      transform: skew(0.69deg);
    }
    30% {
      clip: rect(45px, 9999px, 78px, 0);
      transform: skew(0.71deg);
    }
    35% {
      clip: rect(71px, 9999px, 61px, 0);
      transform: skew(0.54deg);
    }
    40% {
      clip: rect(10px, 9999px, 93px, 0);
      transform: skew(0.66deg);
    }
    45% {
      clip: rect(94px, 9999px, 35px, 0);
      transform: skew(0.97deg);
    }
    50% {
      clip: rect(81px, 9999px, 92px, 0);
      transform: skew(-0.24deg);
    }
    55% {
      clip: rect(8px, 9999px, 55px, 0);
      transform: skew(0.48deg);
    }
    60% {
      clip: rect(10px, 9999px, 52px, 0);
      transform: skew(0.8deg);
    }
    65% {
      clip: rect(36px, 9999px, 71px, 0);
      transform: skew(0.91deg);
    }
    70% {
      clip: rect(91px, 9999px, 39px, 0);
      transform: skew(0.82deg);
    }
    75% {
      clip: rect(22px, 9999px, 22px, 0);
      transform: skew(0.59deg);
    }
    80% {
      clip: rect(60px, 9999px, 100px, 0);
      transform: skew(0.22deg);
    }
    85% {
      clip: rect(37px, 9999px, 78px, 0);
      transform: skew(3.01deg);
    }
    90% {
      clip: rect(76px, 9999px, 19px, 0);
      transform: skew(-2.48deg);
    }
    95% {
      clip: rect(46px, 9999px, 11px, 0);
      transform: skew(0.92deg);
    }
    100% {
      clip: rect(29px, 9999px, 42px, 0);
      transform: skew(0.64deg);
    }
  }
  /* Same deal, just duplicated for ultra randomness.*/
  @keyframes dot-glitch-anim2 {
    0% {
      clip: rect(55px, 9999px, 4px, 0);
      transform: skew(0.19deg);
    }
    5% {
      clip: rect(3px, 9999px, 56px, 0);
      transform: skew(0.01deg);
    }
    10% {
      clip: rect(21px, 9999px, 93px, 0);
      transform: skew(0.77deg);
    }
    15% {
      clip: rect(36px, 9999px, 40px, 0);
      transform: skew(0.73deg);
      content: "syndicate";
      font-size: 10px;
      position: absolute;
    }
    20% {
      clip: rect(88px, 9999px, 66px, 0);
      transform: skew(0.49deg);
    }
    25% {
      clip: rect(20px, 9999px, 89px, 0);
      transform: skew(0.11deg);
    }
    30% {
      clip: rect(37px, 9999px, 68px, 0);
      transform: skew(0.6deg);
    }
    35% {
      clip: rect(73px, 9999px, 66px, 0);
      transform: skew(0.14deg);
    }
    40% {
      clip: rect(86px, 9999px, 53px, 0);
      transform: skew(0.95deg);
    }
    45% {
      clip: rect(1px, 9999px, 92px, 0);
      transform: skew(0.81deg);
    }
    50% {
      clip: rect(22px, 9999px, 96px, 0);
      transform: skew(0.28deg);
    }
    55% {
      clip: rect(61px, 9999px, 62px, 0);
      transform: skew(0.92deg);
    }
    60% {
      clip: rect(62px, 9999px, 37px, 0);
      transform: skew(0.69deg);
    }
    65% {
      clip: rect(51px, 9999px, 33px, 0);
      transform: skew(0.69deg);
    }
    70% {
      clip: rect(61px, 9999px, 92px, 0);
      transform: skew(0.25deg);
    }
    75% {
      clip: rect(23px, 9999px, 75px, 0);
      transform: skew(0.86deg);
    }
    80% {
      clip: rect(44px, 9999px, 40px, 0);
      transform: skew(0.69deg);
    }
    85% {
      clip: rect(67px, 9999px, 7px, 0);
      transform: skew(0.36deg);
    }
    90% {
      clip: rect(30px, 9999px, 6px, 0);
      transform: skew(0.69deg);
    }
    95% {
      clip: rect(88px, 9999px, 96px, 0);
      transform: skew(0.55deg);
    }
    100% {
      clip: rect(32px, 9999px, 37px, 0);
      transform: skew(0.44deg);
    }
  }
  /* Does the same deal as before, but now only skews. Used for main text.*/
  @keyframes dot-glitch-skew {
    0% {
      transform: skew(5deg);
    }
    10% {
      transform: skew(2deg);
    }
    20% {
      transform: skew(5deg);
    }
    30% {
      transform: skew(-4deg);
    }
    40% {
      transform: skew(-1deg);
    }
    50% {
      transform: skew(-4deg);
    }
    60% {
      transform: skew(-4deg);
    }
    70% {
      transform: skew(2deg);
    }
    80% {
      transform: skew(5deg);
    }
    90% {
      transform: skew(0deg);
    }
    100% {
      transform: skew(2deg);
    }
  }
/*---------------------------------------Glitch efx trial-----------------------------------------------*/
/*Tablet*/
@media only screen and (min-width: 768px) {
  .wrapper  {
    width: 600px;
    margin: 0 auto;
    font-family: 'Inconsolata', monospace;
    font-weight: 750;
    color: rgb(158, 140, 140);
  }

  .alien {
    margin: 65% auto;
    
  }
  
  .polymorph h1 {
    /*position:fixed;*/
    padding: 0 30px 100px;
    
  
  }

  .polymorph h2 {
    padding: 30px 0 30px;
    
  }

  .polymorph h3 {
    padding: 30px 30px;
    
  }

  .polymorph h4 {
    padding: 20px 0 20px 0;
    
  }

  .polymorph p {
    /*position:fixed;*/
    padding: 5px 0 30px 0 ;
  
  }
  
  hr {
    border: 3px groove darkred;
    border-width: 4px 1px;
  }

}

/* 
/* Galaxy S5 
@media only screen and (min-width: 360px) {
  .alien {
    margin: 80% auto;
  }
  .hugeBoii {
    margin: 0 auto;
  }
}
@media only screen and (min-width: 640px) {
  .alien {
    margin: 65% auto;
  }
  .hugeBoii {
    margin: 0 auto;
  }
}
 */


@media only screen and (min-width: 1000px) {

  .wrapper  {
    width: 1000px;
  }

  .alien {
    margin: 25% auto;

  }

  .hugeBoii {
    margin: 0;

  }
  .polymorph h1 {
    
    padding: 30px  30px 100px;
    font-size: 100px;
  
  }
  .polymorph p {
    
    margin: 0 60px 0 30px;
    padding: 0 0 30px 0;
  
  }

}